#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# shellcheck disable=SC2034
{
USAGE='[-h] [-f FORMAT]

Match contributors to GitHub usernames.

Options:

  -h  show this screen and exit
  -f  list format

Available formats:

  md    Markdown
  rest  reStructuredText

If FORMAT is not set, default to a plaintext representation.'

set +u
SUBDIRECTORY_OK=true
. "$(git --exec-path)/git-sh-setup"
set -u
}


# shellcheck disable=SC2016
declare -r DEFAULT_FORMAT='"*",$1,"(<"$3">)"'
declare -r API_URL='https://api.github.com'

# Extract the user/repo string from a remote URL.
#
# Args:
#   $1  remote name (optional, defaults to 'origin')
#
# shellcheck disable=SC2120
remote_to_repo() {
  local remote="${1:-origin}"
  local remote_url="$(git config "remote.${remote}.url")"
  local remote_url_no_proto="${remote_url#*//}"
  local path="${remote_url_no_proto#*/}"
  printf "%s" "${path%.git}"
}


# Generate an AWK format string for the given file type.
#
# Args:
#   $1  file type (e.g., md)
#
# shellcheck disable=SC2016
format() {
  local output='"*",$1,"(<"$3">)"'
  local fmt=${1:-}
  case $fmt in
    md)
      output='"*",$1,"([**@"$2"**]("$3"))"'
      ;;
    rst)
      output='"*",$1,"(**`@"$2,"<"$3">`_**)"'
      ;;
    *)
      die "invalid format: ${fmt}"
      ;;
  esac
  printf "%s" "${output}"
}


main() {
  # shellcheck disable=SC2119
  local repo="$(remote_to_repo)"
  local api_url="${API_URL}/repos/${repo}/contributors"
  local fmt=$DEFAULT_FORMAT

  while getopts 'f:' opt; do
    case $opt in
      f)
        fmt="$(format "${OPTARG}")"
        ;;
      *)
        die
        ;;
    esac
  done

  paste <(git shortlog -s | cut -f2-) \
        <(curl -fsS "${api_url}" | jq -r '.[] | .login + "\t" + .html_url') | \
  awk -F'\t' '{ print '"${fmt}"' }'
}


main "${@}"
