#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

PROGRAM=$(basename "${0}")
TEMP_FILES=()

die() {
  printf "%s: %s\n" "${PROGRAM}" "${@}" >&2
  exit 1
}

# Remove temporary files.
cleanup() {
  if [[ ${#TEMP_FILES[@]} -gt 0 ]]; then
    for f in "${TEMP_FILES[@]}"; do
      rm "${f}"
    done
  fi
}

# Render man pages as HTML and open in the default browser.
manh() {
  local temp
  for page in "${@}"; do
    temp=$(mktemp --suffix .html)
    man -aW "${page}" | xargs groff -m mandoc -T html > "${temp}" 2>/dev/null
    $BROWSER "file://${temp}"
    TEMP_FILES+=("${temp}")
  done
}

# Render man pages as PostScript and open in Preview.
manp() {
  for page in "${@}"; do
    man -t "${page}" | open -f -a Preview
  done
}


manv() {
  local stdin=
  if [[ -t 0 ]]; then
    stdin="MANPAGER=cat man ${*} |"
  fi
  eval "$stdin col -b | view -c 'set ft=man ts=8 cc= nomod nolist nonu noma' -"
}


trap cleanup EXIT

if [[ $# -lt 1 ]] && [[ ! -t 0 ]] && [[ $PROGRAM != 'manv' ]]; then
  man
  exit
fi

case $PROGRAM in
  manh)
    manh "${@}"
    # Sleep to give browser time to render files.
    sleep 1
    ;;
  manp)
    [[ $(uname) == "Darwin" ]] || die 'only supported on OS X'
    manp "${@}"
    ;;
  manv)
    manv "${@}"
    ;;
  *)
    man "${@}"
    ;;
esac
